# --- CLI option tests  ---

# Invoquing with correct file as argument
$$$ ./haskell-style-checker-exe test/system/examples/Correct.hs
>>>= 0

# Invoquing with correct file in standard input
<<<
test/system/examples/Correct.hs
$$$ ./haskell-style-checker-exe
>>>= 0

# Invoquing with correct file as argument and flawed file in standard input
<<<
test/system/examples/UselessDo.hs
$$$ ./haskell-style-checker-exe test/system/examples/Correct.hs
>>>= 0

# Invoquing with argos output
$$$ ./haskell-style-checker-exe -o argos test/system/examples/UselessDo.hs && tail -n 1 style-major.txt
>>>
test/system/examples/UselessDo.hs:4:D1
>>>= 0

# Dumping issue manifest
$$$ ./haskell-style-checker-exe --dump-manifest
>>>
C1:nested ifs
D1:useless do
D2:useless generator
C2:guard should be a pattern
F3:line too long
F4:function too big
T1:function has no signature
P1:a file is not parsable
E1:a file contains forbidden extensions
XX:debug rule left empty
>>>= 0

# Excluding directories with vera
$$$ ./haskell-style-checker-exe --exclude "test:src:app:.git:.stack-work" .
>>>
>>>= 0
